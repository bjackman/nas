# Note - when accessing this via TailScale the SSL cert will be for the wrong domain.
# You can fix that by getting Caddy access to talk to the Tailscale socket, but I CBA.

# Serve the FileBrowser UI on the public internet.
{{ public_domain }}  {
	reverse_proxy file-browser
}

# Serve the other stuff only on private networks (Tailscale, home LAN).
# We don't do SSL here - I think it would be possible to mount the Tailscale
# socket into the container and Caddy would get a cert from there if that's
# enabled on the tailnet,
http://{{ private_domain }} {
    # Define a matcher called "denied" for spooky outsiders.
    # This is like the builtin "private_ranges" but also the CGNAT range that
    # tailscale uses. Is this secure? Dunno lmao.
    @denied not client_ip 192.168.0.0/16 172.16.0.0/12 10.0.0.0/8 127.0.0.1/8 fd00::/8 ::1 100.64.0.0/10
    # Apply the abort directive to requests matching the above matcher.
    abort @denied

    # Proxy requests rooted at /promtheus to "prometheus" which is a hostname on
    # the Docker network. Then ditto for all the other UIs.
    # We do this via a "handle" directive in order to flatten out the priority
    # of directives - otherwise all "repond" directives would take precedence over
    # all "reverse_proxy" directives while we actually want the reverse_proxy to
    # take predence over the 404 fallback.
    handle /prometheus/* {
        reverse_proxy prometheus
    }
    handle /alertmanager/* {
        reverse_proxy alertmanager
    }

    # Serve a homepage on the root
    handle / {
        header Content-Type text/html
        respond <<HTML
            <html>
                <head><title>NAS</title></head>
                <body>
                    <ul>
                        <li><a href="/prometheus/">Prometheus</p></li>
                        <li><a href="/alertmanager/">Alertmanager</p></li>
                        <li><a href="https://{{ public_domain }}">FileBrowser</p></li>
                    </ul>
                </body>
            </html>
            HTML 200
    }

    # For everything else you're shit outta luck buddy
    handle {
        header Content-Type text/html
        respond <<HTML
            <html>
                <head><title>Page not found</title></head>
                <body>
                    <p>That's a Texas-sized 404, good buddy.</p>
                    <p>Try the <a href="/">home page</a>.</p>
                </body>
            </html>
            HTML 404
    }
}
