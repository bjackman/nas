# TODO: Update regularly
# TODO: Must create filebrowser.db, how to avoid?

services:
  file-browser:
    image: docker.io/filebrowser/filebrowser
    volumes:
       # The actual NAS data - a ZFS filesystem. For the moment just mount the root.
      - type: bind
        source: "{{ zfs_pool.mount_point }}"
        target: /srv
      - type: bind
        source: "{{ filebrowser_database }}"
        target: /database.db
    networks:
      - nas
    restart: unless-stopped

  caddy:
    image: docker.io/caddy:2
    ports:
      - "80:80"
      - "443:443"
    networks:
      - nas
    command: caddy run --config=/Caddyfile
    volumes:
      - ./Caddyfile:/Caddyfile
      # Persist stuff that's needed to avoid rate limits.
      - ./system-data/caddy_data:/data
    restart: unless-stopped

  # # Disabled - wanted this for Joplin but it's broken:
  # # https://github.com/laurent22/joplin/issues/9027
  # # minio:
  # #   image: quay.io/minio/minio
  # #   ports:
  # #     - "9000:9000"
  # #     - "9001:9001"
  # #   command: minio server /data --console-address ":9001"
  # #   # This should contain MINIO_ROOT_USSER and MINIO_ROOT_PASSWORD
  # #   env_file: ./secrets/minio.env
  # #   volumes:
  # #     - "data:/data"
  # #   networks:
  # #    - nas

  # I dunno why the extra lines are needed here, I can't be bothered to figure
  # out this stupid .yaml.jinja2 crap. This should be written in a proper
  # configuration language.
  {% if inadyn_config is defined %}

  inadyn:
    image: troglobit/inadyn
    volumes:
      - ./inadyn.conf:/etc/inadyn.conf
    restart: unless-stopped

  # Stupid bullshit:
  # https://stackoverflow.com/questions/74810089/err-open-prometheus-queries-active-permission-denied
  init_prometheus:
    image: prom/prometheus
    user: root
    entrypoint:
      - /bin/sh
      - -c
      - |
        chown -R 65534:65534 /prometheus
    volumes:
      - ./system-data/prometheus:/prometheus

  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yaml:/prometheus.yaml
      - ./system-data/prometheus:/prometheus
    depends_on:
      - init_prometheus
    command:
      # This is gonna get stored on the Pi's SD card. Presumably it's pretty
      # small. We also don't really need that much data, the most important job
      # is to alert on disk failures.
      - --storage.tsdb.retention.size=512MB
      - --config.file=/prometheus.yaml
    restart: unless-stopped

  {% endif %}

networks:
  nas:
    name: nas
